// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		419638041E651CEA00B34585 /* Graph.swift in Sources */ = {isa = PBXBuildFile; fileRef = 419638031E651CEA00B34585 /* Graph.swift */; };
		419638081E65AE0800B34585 /* String+Extension.swift in Sources */ = {isa = PBXBuildFile; fileRef = 419638071E65AE0800B34585 /* String+Extension.swift */; };
		419638131E67C55000B34585 /* LinkedList.swift in Sources */ = {isa = PBXBuildFile; fileRef = 419638121E67C55000B34585 /* LinkedList.swift */; };
		419638151E67C59800B34585 /* Queue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 419638141E67C59800B34585 /* Queue.swift */; };
		41BE856C1E6D190E003F3861 /* Interval.swift in Sources */ = {isa = PBXBuildFile; fileRef = 41BE856B1E6D190E003F3861 /* Interval.swift */; };
		41BE85961E6D9692003F3861 /* ListNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 41BE85951E6D9692003F3861 /* ListNode.swift */; };
		41BE859D1E6D98A5003F3861 /* TrieNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 41BE859C1E6D98A5003F3861 /* TrieNode.swift */; };
		41C1403F1E6368FA00F86BF8 /* Heap.swift in Sources */ = {isa = PBXBuildFile; fileRef = 41C1403D1E6368FA00F86BF8 /* Heap.swift */; };
		41C140401E6368FA00F86BF8 /* PriorityQueue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 41C1403E1E6368FA00F86BF8 /* PriorityQueue.swift */; };
		B8334D031E73383F00CD7D50 /* Algorithms.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8334D021E73383F00CD7D50 /* Algorithms.swift */; };
		B8AF4AC61E57C2540004E8A1 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8AF4AC51E57C2540004E8A1 /* AppDelegate.swift */; };
		B8AF4AC81E57C2540004E8A1 /* ViewController.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8AF4AC71E57C2540004E8A1 /* ViewController.swift */; };
		B8AF4ACB1E57C2540004E8A1 /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = B8AF4AC91E57C2540004E8A1 /* Main.storyboard */; };
		B8AF4ACD1E57C2540004E8A1 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = B8AF4ACC1E57C2540004E8A1 /* Assets.xcassets */; };
		B8AF4AD01E57C2540004E8A1 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = B8AF4ACE1E57C2540004E8A1 /* LaunchScreen.storyboard */; };
		B8AF4ADB1E57C2540004E8A1 /* SwiftCodingTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8AF4ADA1E57C2540004E8A1 /* SwiftCodingTests.swift */; };
		B8AF4AE61E57C2540004E8A1 /* SwiftCodingUITests.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8AF4AE51E57C2540004E8A1 /* SwiftCodingUITests.swift */; };
		B8AF4B3E1E5A3E4D0004E8A1 /* ZHDataStructure.h in Headers */ = {isa = PBXBuildFile; fileRef = B8AF4B3C1E5A3E4D0004E8A1 /* ZHDataStructure.h */; settings = {ATTRIBUTES = (Public, ); }; };
		B8AF4B411E5A3E4D0004E8A1 /* ZHDataStructure.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = B8AF4B3A1E5A3E4D0004E8A1 /* ZHDataStructure.framework */; };
		B8AF4B421E5A3E4D0004E8A1 /* ZHDataStructure.framework in Embed Frameworks */ = {isa = PBXBuildFile; fileRef = B8AF4B3A1E5A3E4D0004E8A1 /* ZHDataStructure.framework */; settings = {ATTRIBUTES = (CodeSignOnCopy, RemoveHeadersOnCopy, ); }; };
		B8AF4B4A1E5A3E720004E8A1 /* BinaryTreeTraversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8AF4B481E5A3E720004E8A1 /* BinaryTreeTraversal.swift */; };
		B8AF4B4B1E5A3E720004E8A1 /* Stack.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8AF4B491E5A3E720004E8A1 /* Stack.swift */; };
		B8C1FDE41E74D01D00A14EC1 /* Point.swift in Sources */ = {isa = PBXBuildFile; fileRef = B8C1FDE31E74D01D00A14EC1 /* Point.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		B8AF4AD71E57C2540004E8A1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B8AF4ABA1E57C2540004E8A1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B8AF4AC11E57C2540004E8A1;
			remoteInfo = SwiftCoding;
		};
		B8AF4AE21E57C2540004E8A1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B8AF4ABA1E57C2540004E8A1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B8AF4AC11E57C2540004E8A1;
			remoteInfo = SwiftCoding;
		};
		B8AF4B3F1E5A3E4D0004E8A1 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = B8AF4ABA1E57C2540004E8A1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = B8AF4B391E5A3E4D0004E8A1;
			remoteInfo = ZHDataStructure;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		B8AF4B461E5A3E4D0004E8A1 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
				B8AF4B421E5A3E4D0004E8A1 /* ZHDataStructure.framework in Embed Frameworks */,
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		415478DA1E9F177500692FC6 /* Odd Even Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Odd Even Linked List.playground"; sourceTree = "<group>"; };
		415E565F1EB576A900BD2D5B /* Rectangle Overlap.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Rectangle Overlap.playground"; sourceTree = "<group>"; };
		4182B8EB1EB96D92004D1511 /* Check Word Abbreviation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Check Word Abbreviation.playground"; sourceTree = "<group>"; };
		419637F91E6507B900B34585 /* Word Break II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Word Break II.playground"; sourceTree = "<group>"; };
		419637FA1E6509D700B34585 /* Word Break I.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Word Break I.playground"; sourceTree = "<group>"; };
		419638001E6516A400B34585 /* Remove Invalid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove Invalid Parentheses.playground"; sourceTree = "<group>"; };
		419638031E651CEA00B34585 /* Graph.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Graph.swift; sourceTree = "<group>"; };
		419638061E65AA1B00B34585 /* Maximal Square.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximal Square.playground"; sourceTree = "<group>"; };
		419638071E65AE0800B34585 /* String+Extension.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "String+Extension.swift"; sourceTree = "<group>"; };
		419638121E67C55000B34585 /* LinkedList.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = LinkedList.swift; sourceTree = "<group>"; };
		419638141E67C59800B34585 /* Queue.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Queue.swift; sourceTree = "<group>"; };
		41A689BD1EA06F8600550E92 /* Remove Nth Node From End of List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove Nth Node From End of List.playground"; sourceTree = "<group>"; };
		41A689C81EA1C19700550E92 /* Remove Duplicates from Sorted List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove Duplicates from Sorted List.playground"; sourceTree = "<group>"; };
		41B361711E88B09A00359B88 /* Product of Array Except Self.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Product of Array Except Self.playground"; sourceTree = "<group>"; };
		41B445571EA31D4A00804D3D /* Remove Duplicates from Sorted List II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove Duplicates from Sorted List II.playground"; sourceTree = "<group>"; };
		41BE85521E6B9DEE003F3861 /* Maximum Depth of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximum Depth of Binary Tree.playground"; sourceTree = "<group>"; };
		41BE85531E6C5D7A003F3861 /* Lowest Common Ancestor of a Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Lowest Common Ancestor of a Binary Search Tree.playground"; sourceTree = "<group>"; };
		41BE85541E6C8EEF003F3861 /* Minimum Depth of Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Minimum Depth of Binary Tree.playground"; sourceTree = "<group>"; };
		41BE85561E6C9672003F3861 /* Binary Tree Path Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Path Sum.playground"; sourceTree = "<group>"; };
		41BE85571E6CAF03003F3861 /* Two Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Two Sum.playground"; sourceTree = "<group>"; };
		41BE85581E6CAF2C003F3861 /* Remove Duplicate Numbers in Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove Duplicate Numbers in Array.playground"; sourceTree = "<group>"; };
		41BE85591E6CAF40003F3861 /* Two Sum - Less than or equal to target.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Two Sum - Less than or equal to target.playground"; sourceTree = "<group>"; };
		41BE855B1E6CAF66003F3861 /* Two Sum - Unique pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Two Sum - Unique pairs.playground"; sourceTree = "<group>"; };
		41BE855D1E6CAF81003F3861 /* Sort Colors.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sort Colors.playground"; sourceTree = "<group>"; };
		41BE855F1E6CAF95003F3861 /* 3Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 3Sum.playground; sourceTree = "<group>"; };
		41BE85601E6CAFB6003F3861 /* Two Sum - Input array is sorted.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Two Sum - Input array is sorted.playground"; sourceTree = "<group>"; };
		41BE85611E6CAFC9003F3861 /* Two Sum - Closest to target.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Two Sum - Closest to target.playground"; sourceTree = "<group>"; };
		41BE85621E6CAFDD003F3861 /* Sort Colors II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sort Colors II.playground"; sourceTree = "<group>"; };
		41BE85631E6CAFF1003F3861 /* Partition Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Partition Array.playground"; sourceTree = "<group>"; };
		41BE85641E6D177E003F3861 /* Maximum Size Subarray Sum Equals k.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximum Size Subarray Sum Equals k.playground"; sourceTree = "<group>"; };
		41BE85671E6D1868003F3861 /* Decode Ways.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Decode Ways.playground"; sourceTree = "<group>"; };
		41BE856B1E6D190E003F3861 /* Interval.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Interval.swift; sourceTree = "<group>"; };
		41BE85711E6D1A41003F3861 /* Add Binary.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Add Binary.playground"; sourceTree = "<group>"; };
		41BE857D1E6D1A41003F3861 /* Count and Say.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Count and Say.playground"; sourceTree = "<group>"; };
		41BE857E1E6D1A41003F3861 /* Regular Expression Matching.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Regular Expression Matching.playground"; sourceTree = "<group>"; };
		41BE857F1E6D1A41003F3861 /* Sparse Matrix Multiplication.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sparse Matrix Multiplication.playground"; sourceTree = "<group>"; };
		41BE85801E6D1A41003F3861 /* StrStr.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = StrStr.playground; sourceTree = "<group>"; };
		41BE85831E6D90B3003F3861 /* Clone Graph.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Clone Graph.playground"; sourceTree = "<group>"; };
		41BE85841E6D90B3003F3861 /* Course Schedule.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Course Schedule.playground"; sourceTree = "<group>"; };
		41BE85851E6D90B3003F3861 /* Graph Valid Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Graph Valid Tree.playground"; sourceTree = "<group>"; };
		41BE85861E6D90B3003F3861 /* Knight Shortest Path.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Knight Shortest Path.playground"; sourceTree = "<group>"; };
		41BE85871E6D90B3003F3861 /* Number of Islands BFS.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Number of Islands BFS.playground"; sourceTree = "<group>"; };
		41BE85881E6D90B3003F3861 /* Search Graph Nodes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Search Graph Nodes.playground"; sourceTree = "<group>"; };
		41BE85891E6D90B3003F3861 /* Topological Sorting.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Topological Sorting.playground"; sourceTree = "<group>"; };
		41BE858A1E6D90B3003F3861 /* Word Ladder.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Word Ladder.playground"; sourceTree = "<group>"; };
		41BE858B1E6D90B4003F3861 /* Zombie in Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Zombie in Matrix.playground"; sourceTree = "<group>"; };
		41BE858C1E6D90CF003F3861 /* Integer to English Words.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Integer to English Words.playground"; sourceTree = "<group>"; };
		41BE858D1E6D9117003F3861 /* Binary Tree Vertical Order Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Vertical Order Traversal.playground"; sourceTree = "<group>"; };
		41BE858E1E6D916A003F3861 /* Find the Celebrity.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Find the Celebrity.playground"; sourceTree = "<group>"; };
		41BE858F1E6D9495003F3861 /* Read N Characters Given Read4 II - Call multiple times.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Read N Characters Given Read4 II - Call multiple times.playground"; sourceTree = "<group>"; };
		41BE85901E6D94FF003F3861 /* Serialize and Deserialize Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Serialize and Deserialize Binary Tree.playground"; sourceTree = "<group>"; };
		41BE85911E6D9573003F3861 /* Expression Add Operators.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Expression Add Operators.playground"; sourceTree = "<group>"; };
		41BE85921E6D95BE003F3861 /* Minimum Window Substring.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Minimum Window Substring.playground"; sourceTree = "<group>"; };
		41BE85941E6D967E003F3861 /* Merge k Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge k Sorted Lists.playground"; sourceTree = "<group>"; };
		41BE85951E6D9692003F3861 /* ListNode.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ListNode.swift; sourceTree = "<group>"; };
		41BE85971E6D9732003F3861 /* One Edit Distance.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "One Edit Distance.playground"; sourceTree = "<group>"; };
		41BE85981E6D9789003F3861 /* Read N Characters Given Read4.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Read N Characters Given Read4.playground"; sourceTree = "<group>"; };
		41BE85991E6D97B9003F3861 /* Inorder Successor in BST.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Inorder Successor in BST.playground"; sourceTree = "<group>"; };
		41BE859B1E6D9841003F3861 /* Add and Search Word.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Add and Search Word.playground"; sourceTree = "<group>"; };
		41BE859C1E6D98A5003F3861 /* TrieNode.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = TrieNode.swift; sourceTree = "<group>"; };
		41BE859E1E6D9944003F3861 /* Flatten Nested List Iterator.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Flatten Nested List Iterator.playground"; sourceTree = "<group>"; };
		41BE859F1E6D998F003F3861 /* Best Time to Buy and Sell Stock.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Best Time to Buy and Sell Stock.playground"; sourceTree = "<group>"; };
		41BE85A01E6D99D1003F3861 /* Binary Search Tree Iterator.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Search Tree Iterator.playground"; sourceTree = "<group>"; };
		41BE85A11E6D9A0C003F3861 /* Valid Palindrome.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Valid Palindrome.playground"; sourceTree = "<group>"; };
		41BE85A21E7040C0003F3861 /* Minimum Size Subarray Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Minimum Size Subarray Sum.playground"; sourceTree = "<group>"; };
		41BE85A31E718A9C003F3861 /* Minimum Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Minimum Subarray.playground"; sourceTree = "<group>"; };
		41BE85A41E718B39003F3861 /* Maximum Subarray Difference.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximum Subarray Difference.playground"; sourceTree = "<group>"; };
		41BE85A51E718B6B003F3861 /* Subarray Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Subarray Sum.playground"; sourceTree = "<group>"; };
		41BE85A61E718BDA003F3861 /* Subarray Sum Closest.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Subarray Sum Closest.playground"; sourceTree = "<group>"; };
		41BE85A71E718C17003F3861 /* Subarray Sum II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Subarray Sum II.playground"; sourceTree = "<group>"; };
		41BE85A81E718C87003F3861 /* Maximum Subarray II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximum Subarray II.playground"; sourceTree = "<group>"; };
		41BE85AA1E739686003F3861 /* Island Perimeter.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Island Perimeter.playground"; sourceTree = "<group>"; };
		41BE85AD1E74B6C8003F3861 /* Kth Largest Element in an Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Kth Largest Element in an Array.playground"; sourceTree = "<group>"; };
		41BE85AE1E74B70D003F3861 /* Median.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Median.playground; sourceTree = "<group>"; };
		41BE85B31E74B85D003F3861 /* Partition Array by Odd and Even.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Partition Array by Odd and Even.playground"; sourceTree = "<group>"; };
		41BE85B41E74B8A3003F3861 /* Interleaving Positive and Negative Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Interleaving Positive and Negative Numbers.playground"; sourceTree = "<group>"; };
		41BE85B51E74B8E5003F3861 /* Sort Letters by Case.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sort Letters by Case.playground"; sourceTree = "<group>"; };
		41BE85B61E74B93C003F3861 /* Two Sum - Difference equals to target.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Two Sum - Difference equals to target.playground"; sourceTree = "<group>"; };
		41C140371E63480A00F86BF8 /* String Permutation II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "String Permutation II.playground"; sourceTree = "<group>"; };
		41C1403B1E63658800F86BF8 /* Expression Expand.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Expression Expand.playground"; sourceTree = "<group>"; };
		41C1403D1E6368FA00F86BF8 /* Heap.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Heap.swift; sourceTree = "<group>"; };
		41C1403E1E6368FA00F86BF8 /* PriorityQueue.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = PriorityQueue.swift; sourceTree = "<group>"; };
		41C140411E63694E00F86BF8 /* Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Valid Parentheses.playground"; sourceTree = "<group>"; };
		41C140421E6369E600F86BF8 /* Binary Tree Iterative Traversals.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Iterative Traversals.playground"; sourceTree = "<group>"; };
		41C140431E636A4500F86BF8 /* Longest Valid Parentheses.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Longest Valid Parentheses.playground"; sourceTree = "<group>"; };
		41C140441E636B2900F86BF8 /* Simplify Path.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Simplify Path.playground"; sourceTree = "<group>"; };
		41C140451E636B7C00F86BF8 /* Ternary Expression Parser.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Ternary Expression Parser.playground"; sourceTree = "<group>"; };
		41C140461E636BDB00F86BF8 /* Remove K Digits.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove K Digits.playground"; sourceTree = "<group>"; };
		41C140471E636C1600F86BF8 /* Evaluate Reverse Polish Notation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Evaluate Reverse Polish Notation.playground"; sourceTree = "<group>"; };
		41F4B92D1EAED147006A9F94 /* Binary Tree Upside Down.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Upside Down.playground"; sourceTree = "<group>"; };
		41F7B8F81E7B849400CD70CC /* Divide Two Integers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Divide Two Integers.playground"; sourceTree = "<group>"; };
		41F7B8FA1E7DC3B400CD70CC /* Invert Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Invert Binary Tree.playground"; sourceTree = "<group>"; };
		41F7B8FB1E7DD4C000CD70CC /* Add Two Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Add Two Numbers.playground"; sourceTree = "<group>"; };
		41F7B8FC1E7DD9CB00CD70CC /* House Robber.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "House Robber.playground"; sourceTree = "<group>"; };
		B809EAAC1E78D41B00B6D090 /* Next Permutation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Next Permutation.playground"; sourceTree = "<group>"; };
		B809EAAD1E78D43F00B6D090 /* Previous Permutation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Previous Permutation.playground"; sourceTree = "<group>"; };
		B809EAB01E7F3A2900B6D090 /* Best Time to Buy and Sell Stock with Cooldown.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Best Time to Buy and Sell Stock with Cooldown.playground"; sourceTree = "<group>"; };
		B809EAB11E7F3AF600B6D090 /* Best Time to Buy and Sell Stock II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Best Time to Buy and Sell Stock II.playground"; sourceTree = "<group>"; };
		B809EAB21E7F489200B6D090 /* Set Matrix Zeroes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Set Matrix Zeroes.playground"; sourceTree = "<group>"; };
		B809EAB31E7F498700B6D090 /* Construct Binary Tree from Inorder and Postorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Construct Binary Tree from Inorder and Postorder Traversal.playground"; sourceTree = "<group>"; };
		B809EAB41E7F49FF00B6D090 /* Construct Binary Tree from Preorder and Inorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Construct Binary Tree from Preorder and Inorder Traversal.playground"; sourceTree = "<group>"; };
		B811C8701E5A859D009E3483 /* Lowest Common Ancestor.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Lowest Common Ancestor.playground"; sourceTree = "<group>"; };
		B811C8711E5A8D15009E3483 /* Balanced Binary Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Balanced Binary Tree.playground"; sourceTree = "<group>"; };
		B811C8721E5D3D30009E3483 /* Binary Tree Paths.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Paths.playground"; sourceTree = "<group>"; };
		B811C8731E5D5129009E3483 /* Symmetric Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Symmetric Tree.playground"; sourceTree = "<group>"; };
		B811C87C1E5FD2EC009E3483 /* Permutation.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Permutation.playground; sourceTree = "<group>"; };
		B81C048B1E6149C400E9F997 /* Combination Sum III.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Combination Sum III.playground"; sourceTree = "<group>"; };
		B81C048C1E624B7400E9F997 /* Palindrome Partitioning.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Palindrome Partitioning.playground"; sourceTree = "<group>"; };
		B81C048E1E624C1800E9F997 /* Word Squares.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Word Squares.playground"; sourceTree = "<group>"; };
		B81C048F1E624C7A00E9F997 /* Letter Combinations of a Phone Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Letter Combinations of a Phone Number.playground"; sourceTree = "<group>"; };
		B824135D1E57CE88002A692F /* Search in a Big Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Search in a Big Sorted Array.playground"; sourceTree = "<group>"; };
		B824135E1E57D18B002A692F /* Find Minimum in Rotated Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Find Minimum in Rotated Sorted Array.playground"; sourceTree = "<group>"; };
		B824135F1E57D345002A692F /* Find Peak Element.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Find Peak Element.playground"; sourceTree = "<group>"; };
		B82413601E57D6B9002A692F /* First Bad Version.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "First Bad Version.playground"; sourceTree = "<group>"; };
		B82413621E58CD1B002A692F /* Subtree with Maximum Average .playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Subtree with Maximum Average .playground"; sourceTree = "<group>"; };
		B8334D021E73383F00CD7D50 /* Algorithms.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Algorithms.swift; sourceTree = "<group>"; };
		B877739D1E9068BD0070EBD2 /* Trapping Rain Water.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Trapping Rain Water.playground"; sourceTree = "<group>"; };
		B88140D71E784A6900D4A965 /* Paint House.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Paint House.playground"; sourceTree = "<group>"; };
		B88140D81E784AEF00D4A965 /* Triangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Triangle.playground; sourceTree = "<group>"; };
		B88140D91E784C1F00D4A965 /* Minimum Path Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Minimum Path Sum.playground"; sourceTree = "<group>"; };
		B88140DA1E784D1100D4A965 /* Unique Path.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Unique Path.playground"; sourceTree = "<group>"; };
		B88140DB1E784D6400D4A965 /* Unique Paths II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Unique Paths II.playground"; sourceTree = "<group>"; };
		B88140DC1E784DAD00D4A965 /* Climbing Stairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Climbing Stairs.playground"; sourceTree = "<group>"; };
		B88140DD1E784DF200D4A965 /* Longest Increasing Subsequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Longest Increasing Subsequence.playground"; sourceTree = "<group>"; };
		B88140DE1E784E3900D4A965 /* Perfect Squares.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Perfect Squares.playground"; sourceTree = "<group>"; };
		B88140DF1E784E7700D4A965 /* Largest Divisible Subset.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Largest Divisible Subset.playground"; sourceTree = "<group>"; };
		B88140E01E78873D00D4A965 /* Contains Duplicate.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Contains Duplicate.playground"; sourceTree = "<group>"; };
		B88140E11E78898600D4A965 /* Contains Duplicate II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Contains Duplicate II.playground"; sourceTree = "<group>"; };
		B8AF4AC21E57C2540004E8A1 /* SwiftCoding.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = SwiftCoding.app; sourceTree = BUILT_PRODUCTS_DIR; };
		B8AF4AC51E57C2540004E8A1 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
		B8AF4AC71E57C2540004E8A1 /* ViewController.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ViewController.swift; sourceTree = "<group>"; };
		B8AF4ACA1E57C2540004E8A1 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
		B8AF4ACC1E57C2540004E8A1 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		B8AF4ACF1E57C2540004E8A1 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
		B8AF4AD11E57C2540004E8A1 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		B8AF4AD61E57C2540004E8A1 /* SwiftCodingTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = SwiftCodingTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		B8AF4ADA1E57C2540004E8A1 /* SwiftCodingTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwiftCodingTests.swift; sourceTree = "<group>"; };
		B8AF4ADC1E57C2540004E8A1 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		B8AF4AE11E57C2540004E8A1 /* SwiftCodingUITests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = SwiftCodingUITests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		B8AF4AE51E57C2540004E8A1 /* SwiftCodingUITests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SwiftCodingUITests.swift; sourceTree = "<group>"; };
		B8AF4AE71E57C2540004E8A1 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		B8AF4AF61E57C3790004E8A1 /* Last Position of Target.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Last Position of Target.playground"; sourceTree = "<group>"; };
		B8AF4AF71E57C5700004E8A1 /* First Position of Target.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "First Position of Target.playground"; sourceTree = "<group>"; };
		B8AF4AF81E57C69F0004E8A1 /* Sqrt(x).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sqrt(x).playground"; sourceTree = "<group>"; };
		B8AF4AF91E57DC3D0004E8A1 /* Search in Rotated Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Search in Rotated Sorted Array.playground"; sourceTree = "<group>"; };
		B8AF4AFA1E58BD410004E8A1 /*  Wood Cut.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = " Wood Cut.playground"; sourceTree = "<group>"; };
		B8AF4AFB1E58C0C50004E8A1 /* Copy Books.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Copy Books.playground"; sourceTree = "<group>"; };
		B8AF4AFC1E59FF640004E8A1 /* Minimum Subtree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Minimum Subtree.playground"; sourceTree = "<group>"; };
		B8AF4AFD1E5A087C0004E8A1 /* Binary Tree Level Order Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Level Order Traversal.playground"; sourceTree = "<group>"; };
		B8AF4B3A1E5A3E4D0004E8A1 /* ZHDataStructure.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = ZHDataStructure.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		B8AF4B3C1E5A3E4D0004E8A1 /* ZHDataStructure.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ZHDataStructure.h; sourceTree = "<group>"; };
		B8AF4B3D1E5A3E4D0004E8A1 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		B8AF4B481E5A3E720004E8A1 /* BinaryTreeTraversal.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = BinaryTreeTraversal.swift; sourceTree = "<group>"; };
		B8AF4B491E5A3E720004E8A1 /* Stack.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Stack.swift; sourceTree = "<group>"; };
		B8AF4B4C1E5A571F0004E8A1 /* Binary Tree Longest Consecutive Sequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Longest Consecutive Sequence.playground"; sourceTree = "<group>"; };
		B8AF4B4D1E5A67520004E8A1 /* Validate Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Validate Binary Search Tree.playground"; sourceTree = "<group>"; };
		B8AF4B4E1E5A9F970004E8A1 /* convert binary search tree to doubly linked list.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "convert binary search tree to doubly linked list.playground"; sourceTree = "<group>"; };
		B8AF4B4F1E5BED5D0004E8A1 /* Flatten Binary Tree to Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Flatten Binary Tree to Linked List.playground"; sourceTree = "<group>"; };
		B8BC1C101E5FCDBE000B20AB /* Subset.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Subset.playground; sourceTree = "<group>"; };
		B8BC1C111E5FDBDD000B20AB /* Combination.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Combination.playground; sourceTree = "<group>"; };
		B8BC1C121E5FE21F000B20AB /* Combination Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Combination Sum.playground"; sourceTree = "<group>"; };
		B8BC1C131E613F27000B20AB /* Combination Sum II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Combination Sum II.playground"; sourceTree = "<group>"; };
		B8C1B38F1E6B794200C315BC /* Binary Tree Path Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Path Sum.playground"; sourceTree = "<group>"; };
		B8C1B3901E6D9B9A00C315BC /* Palindrome Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Palindrome Linked List.playground"; sourceTree = "<group>"; };
		B8C1B3911E6D9BDD00C315BC /* Remove Duplicates from Sorted Array II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Remove Duplicates from Sorted Array II.playground"; sourceTree = "<group>"; };
		B8C1B3931E6E614100C315BC /* Pow(x, n).playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Pow(x, n).playground"; sourceTree = "<group>"; };
		B8C1B3941E6E61FA00C315BC /* Multiply Strings.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Multiply Strings.playground"; sourceTree = "<group>"; };
		B8C1B3951E6E62A500C315BC /* Merge Sorted Array.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge Sorted Array.playground"; sourceTree = "<group>"; };
		B8C1B3961E6E62E100C315BC /* Roman to Integer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Roman to Integer.playground"; sourceTree = "<group>"; };
		B8C1B3971E6E634500C315BC /* Target Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Target Sum.playground"; sourceTree = "<group>"; };
		B8C1B3981E6E638300C315BC /* Alien Dictionary.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Alien Dictionary.playground"; sourceTree = "<group>"; };
		B8C1B39A1E6E63D000C315BC /* Reverse Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Reverse Linked List.playground"; sourceTree = "<group>"; };
		B8C1B39B1E6E649300C315BC /* Copy List with Random Pointer.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Copy List with Random Pointer.playground"; sourceTree = "<group>"; };
		B8C1B39C1E6E654800C315BC /* Sort List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sort List.playground"; sourceTree = "<group>"; };
		B8C1B39D1E6E659100C315BC /* Linked List Cycle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Linked List Cycle.playground"; sourceTree = "<group>"; };
		B8C1B39E1E6E65CE00C315BC /* Merge Two Sorted Lists.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge Two Sorted Lists.playground"; sourceTree = "<group>"; };
		B8C1B39F1E6E662D00C315BC /* Median of two Sorted Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Median of two Sorted Arrays.playground"; sourceTree = "<group>"; };
		B8C1B3A01E6E666400C315BC /* Maximum Subarray.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximum Subarray.playground"; sourceTree = "<group>"; };
		B8C1B3A11E6E66AA00C315BC /* Intersection of Two Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Intersection of Two Arrays.playground"; sourceTree = "<group>"; };
		B8C1B3A21E6E66F900C315BC /* Partition List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Partition List.playground"; sourceTree = "<group>"; };
		B8C1B3A31E6E673600C315BC /* Move Zeroes.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Move Zeroes.playground"; sourceTree = "<group>"; };
		B8C1B3A41E6E678E00C315BC /* 3Sum Closest.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "3Sum Closest.playground"; sourceTree = "<group>"; };
		B8C1B3A51E6E67C500C315BC /* 4Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = 4Sum.playground; sourceTree = "<group>"; };
		B8C1FDC11E74BAD100A14EC1 /* Reverse Nodes in k-Groups.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Reverse Nodes in k-Groups.playground"; sourceTree = "<group>"; };
		B8C1FDC21E74BB5B00A14EC1 /* Reverse Linked List II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Reverse Linked List II.playground"; sourceTree = "<group>"; };
		B8C1FDC31E74BBED00A14EC1 /* Swap Nodes in Pairs.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Swap Nodes in Pairs.playground"; sourceTree = "<group>"; };
		B8C1FDC41E74BC1100A14EC1 /* Swap Two Nodes in Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Swap Two Nodes in Linked List.playground"; sourceTree = "<group>"; };
		B8C1FDC51E74BC7600A14EC1 /* Reorder List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Reorder List.playground"; sourceTree = "<group>"; };
		B8C1FDC61E74BC9700A14EC1 /* Rotate List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Rotate List.playground"; sourceTree = "<group>"; };
		B8C1FDC71E74BD4700A14EC1 /* Delete Node in the Middle of Singly Linked List .playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Delete Node in the Middle of Singly Linked List .playground"; sourceTree = "<group>"; };
		B8C1FDC81E74BD8F00A14EC1 /* Convert Sorted List to Binary Search Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Convert Sorted List to Binary Search Tree.playground"; sourceTree = "<group>"; };
		B8C1FDC91E74BDC200A14EC1 /* Convert Binary Search Tree to Doubly Linked List.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Convert Binary Search Tree to Doubly Linked List.playground"; sourceTree = "<group>"; };
		B8C1FDCB1E74BE3F00A14EC1 /* Window Sum.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Window Sum.playground"; sourceTree = "<group>"; };
		B8C1FDCC1E74BE9B00A14EC1 /* Merge Two Sorted Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge Two Sorted Arrays.playground"; sourceTree = "<group>"; };
		B8C1FDCD1E74BF6600A14EC1 /* Implement Stack using Queues.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Implement Stack using Queues.playground"; sourceTree = "<group>"; };
		B8C1FDCE1E74BF9F00A14EC1 /* Implement Queue using Stacks.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Implement Queue using Stacks.playground"; sourceTree = "<group>"; };
		B8C1FDCF1E74C00900A14EC1 /* Min Stack.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Min Stack.playground"; sourceTree = "<group>"; };
		B8C1FDD01E74C05D00A14EC1 /* Maximal Rectangle.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximal Rectangle.playground"; sourceTree = "<group>"; };
		B8C1FDD11E74C09D00A14EC1 /* Largest Rectangle in Histogram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Largest Rectangle in Histogram.playground"; sourceTree = "<group>"; };
		B8C1FDD31E74C0FD00A14EC1 /* Max Tree.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Max Tree.playground"; sourceTree = "<group>"; };
		B8C1FDD41E74C1A700A14EC1 /* Longest Consecutive Sequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Longest Consecutive Sequence.playground"; sourceTree = "<group>"; };
		B8C1FDD61E74C1EC00A14EC1 /* Anagrams.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Anagrams.playground; sourceTree = "<group>"; };
		B8C1FDD71E74C22800A14EC1 /* Group Anagrams.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Group Anagrams.playground"; sourceTree = "<group>"; };
		B8C1FDD81E74C26400A14EC1 /* Valid Anagram.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Valid Anagram.playground"; sourceTree = "<group>"; };
		B8C1FDD91E74C27D00A14EC1 /* Find All Anagrams in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Find All Anagrams in a String.playground"; sourceTree = "<group>"; };
		B8C1FDDB1E74C2E700A14EC1 /* LRU Cache.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "LRU Cache.playground"; sourceTree = "<group>"; };
		B8C1FDDC1E74C31800A14EC1 /* LFU Cache.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "LFU Cache.playground"; sourceTree = "<group>"; };
		B8C1FDDD1E74C34700A14EC1 /* Ugly Number.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Ugly Number.playground"; sourceTree = "<group>"; };
		B8C1FDDE1E74C37E00A14EC1 /* Heapify.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = Heapify.playground; sourceTree = "<group>"; };
		B8C1FDDF1E74C3AB00A14EC1 /* Top k Largest Number II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Top k Largest Number II.playground"; sourceTree = "<group>"; };
		B8C1FDE01E74CF7100A14EC1 /* High Five.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "High Five.playground"; sourceTree = "<group>"; };
		B8C1FDE11E74CFD100A14EC1 /* K Closest Points.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "K Closest Points.playground"; sourceTree = "<group>"; };
		B8C1FDE31E74D01D00A14EC1 /* Point.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = Point.swift; sourceTree = "<group>"; };
		B8C1FDE61E74D0CB00A14EC1 /* Merge k Sorted Arrays.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge k Sorted Arrays.playground"; sourceTree = "<group>"; };
		B8C1FDE81E74D16600A14EC1 /* Insert Interval.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Insert Interval.playground"; sourceTree = "<group>"; };
		B8C1FDE91E74D16600A14EC1 /* Meeting Rooms II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Meeting Rooms II.playground"; sourceTree = "<group>"; };
		B8C1FDEA1E74D16600A14EC1 /* Meeting Rooms.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Meeting Rooms.playground"; sourceTree = "<group>"; };
		B8C1FDEB1E74D16600A14EC1 /* Merge Intervals.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Merge Intervals.playground"; sourceTree = "<group>"; };
		B8C1FDEC1E74D18300A14EC1 /* Data Stream Median.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Data Stream Median.playground"; sourceTree = "<group>"; };
		B8C1FDED1E74D21300A14EC1 /* Top k Largest Numbers.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Top k Largest Numbers.playground"; sourceTree = "<group>"; };
		B8C1FDEE1E74D24800A14EC1 /* Kth Smallest Number in Sorted Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Kth Smallest Number in Sorted Matrix.playground"; sourceTree = "<group>"; };
		B8C1FDEF1E74D2B900A14EC1 /* Top K Frequent Elements.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Top K Frequent Elements.playground"; sourceTree = "<group>"; };
		B8C1FDF01E74D30500A14EC1 /* Building Outline.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Building Outline.playground"; sourceTree = "<group>"; };
		B8C1FDF11E74D41500A14EC1 /* Binary Tree Postorder Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Postorder Traversal.playground"; sourceTree = "<group>"; };
		B8C1FDF31E74D51300A14EC1 /* Binary Tree Zigzag Level Order Traversal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Binary Tree Zigzag Level Order Traversal.playground"; sourceTree = "<group>"; };
		B8C1FDF41E74D53000A14EC1 /* Convert Binary Tree to Linked Lists by Depth.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Convert Binary Tree to Linked Lists by Depth.playground"; sourceTree = "<group>"; };
		B8C1FDF51E74D5DE00A14EC1 /* Sequence Reconstruction.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Sequence Reconstruction.playground"; sourceTree = "<group>"; };
		B8C1FDF61E74D61900A14EC1 /* Build Post Office II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Build Post Office II.playground"; sourceTree = "<group>"; };
		B8C1FDF71E74D67500A14EC1 /* Connected Component in Undirected Graph.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Connected Component in Undirected Graph.playground"; sourceTree = "<group>"; };
		B8C1FDF81E74D6DE00A14EC1 /* Smallest Rectangle Enclosing Black Pixels.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Smallest Rectangle Enclosing Black Pixels.playground"; sourceTree = "<group>"; };
		B8C1FDF91E74D7C100A14EC1 /* Search a 2D Matrix.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Search a 2D Matrix.playground"; sourceTree = "<group>"; };
		B8C1FDFA1E74D7DF00A14EC1 /* Maximum Number in Mountain Sequence.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Maximum Number in Mountain Sequence.playground"; sourceTree = "<group>"; };
		B8C908431E635BFE004BBACA /* Number of Islands DFS.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Number of Islands DFS.playground"; sourceTree = "<group>"; };
		B8D497E21E78974200E9589F /* Reverse Words in a String.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Reverse Words in a String.playground"; sourceTree = "<group>"; };
		B8D497E31E78975C00E9589F /* Reverse Words in a String II.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = "Reverse Words in a String II.playground"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		B8AF4ABF1E57C2540004E8A1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8AF4B411E5A3E4D0004E8A1 /* ZHDataStructure.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4AD31E57C2540004E8A1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4ADE1E57C2540004E8A1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4B361E5A3E4D0004E8A1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		419638051E65AA0B00B34585 /* DP */ = {
			isa = PBXGroup;
			children = (
				419638061E65AA1B00B34585 /* Maximal Square.playground */,
				41BE85671E6D1868003F3861 /* Decode Ways.playground */,
				B8C1B3971E6E634500C315BC /* Target Sum.playground */,
				B88140D71E784A6900D4A965 /* Paint House.playground */,
				B88140D81E784AEF00D4A965 /* Triangle.playground */,
				B88140D91E784C1F00D4A965 /* Minimum Path Sum.playground */,
				B88140DA1E784D1100D4A965 /* Unique Path.playground */,
				B88140DB1E784D6400D4A965 /* Unique Paths II.playground */,
				B88140DC1E784DAD00D4A965 /* Climbing Stairs.playground */,
				B88140DD1E784DF200D4A965 /* Longest Increasing Subsequence.playground */,
				B88140DE1E784E3900D4A965 /* Perfect Squares.playground */,
				B88140DF1E784E7700D4A965 /* Largest Divisible Subset.playground */,
				41F7B8FC1E7DD9CB00CD70CC /* House Robber.playground */,
				B809EAB01E7F3A2900B6D090 /* Best Time to Buy and Sell Stock with Cooldown.playground */,
				B809EAB11E7F3AF600B6D090 /* Best Time to Buy and Sell Stock II.playground */,
			);
			path = DP;
			sourceTree = "<group>";
		};
		41BE85551E6C937C003F3861 /* Two Pointers */ = {
			isa = PBXGroup;
			children = (
				41BE85B21E74B7C0003F3861 /* Bidirectional */,
				41BE85B11E74B78B003F3861 /* Forward */,
				41BE85AF1E74B74E003F3861 /* Partition */,
				B8C1B3911E6D9BDD00C315BC /* Remove Duplicates from Sorted Array II.playground */,
				41BE85A21E7040C0003F3861 /* Minimum Size Subarray Sum.playground */,
				41BE85641E6D177E003F3861 /* Maximum Size Subarray Sum Equals k.playground */,
				41BE85921E6D95BE003F3861 /* Minimum Window Substring.playground */,
				B8C1B3901E6D9B9A00C315BC /* Palindrome Linked List.playground */,
			);
			path = "Two Pointers";
			sourceTree = "<group>";
		};
		41BE85701E6D1A41003F3861 /* String&Array */ = {
			isa = PBXGroup;
			children = (
				B8C1FDE71E74D16600A14EC1 /* Intervals */,
				B8C1FDE51E74D0BF00A14EC1 /* Merge */,
				B8C1FDD51E74C1E600A14EC1 /* Anagrams */,
				B8C1FDCA1E74BE1E00A14EC1 /* PrefixSum */,
				41BE85711E6D1A41003F3861 /* Add Binary.playground */,
				41BE857D1E6D1A41003F3861 /* Count and Say.playground */,
				41BE857E1E6D1A41003F3861 /* Regular Expression Matching.playground */,
				41BE857F1E6D1A41003F3861 /* Sparse Matrix Multiplication.playground */,
				41BE85801E6D1A41003F3861 /* StrStr.playground */,
				41BE858C1E6D90CF003F3861 /* Integer to English Words.playground */,
				41BE858E1E6D916A003F3861 /* Find the Celebrity.playground */,
				41BE85981E6D9789003F3861 /* Read N Characters Given Read4.playground */,
				41BE858F1E6D9495003F3861 /* Read N Characters Given Read4 II - Call multiple times.playground */,
				41BE85A81E718C87003F3861 /* Maximum Subarray II.playground */,
				41BE85A41E718B39003F3861 /* Maximum Subarray Difference.playground */,
				41BE85A61E718BDA003F3861 /* Subarray Sum Closest.playground */,
				41BE85A71E718C17003F3861 /* Subarray Sum II.playground */,
				B8C1B3941E6E61FA00C315BC /* Multiply Strings.playground */,
				B8C1B3961E6E62E100C315BC /* Roman to Integer.playground */,
				41BE85971E6D9732003F3861 /* One Edit Distance.playground */,
				B8C1B3A11E6E66AA00C315BC /* Intersection of Two Arrays.playground */,
				B8C1FDD41E74C1A700A14EC1 /* Longest Consecutive Sequence.playground */,
				B88140E01E78873D00D4A965 /* Contains Duplicate.playground */,
				B88140E11E78898600D4A965 /* Contains Duplicate II.playground */,
				B8D497E21E78974200E9589F /* Reverse Words in a String.playground */,
				B8D497E31E78975C00E9589F /* Reverse Words in a String II.playground */,
				B809EAAC1E78D41B00B6D090 /* Next Permutation.playground */,
				B809EAAD1E78D43F00B6D090 /* Previous Permutation.playground */,
				B809EAB21E7F489200B6D090 /* Set Matrix Zeroes.playground */,
				41B361711E88B09A00359B88 /* Product of Array Except Self.playground */,
				4182B8EB1EB96D92004D1511 /* Check Word Abbreviation.playground */,
			);
			path = "String&Array";
			sourceTree = "<group>";
		};
		41BE85811E6D90B3003F3861 /* BFS */ = {
			isa = PBXGroup;
			children = (
				B8C1FDF31E74D51300A14EC1 /* Binary Tree Zigzag Level Order Traversal.playground */,
				41BE85831E6D90B3003F3861 /* Clone Graph.playground */,
				41BE85841E6D90B3003F3861 /* Course Schedule.playground */,
				41BE85851E6D90B3003F3861 /* Graph Valid Tree.playground */,
				41BE85861E6D90B3003F3861 /* Knight Shortest Path.playground */,
				41BE85871E6D90B3003F3861 /* Number of Islands BFS.playground */,
				41BE85881E6D90B3003F3861 /* Search Graph Nodes.playground */,
				41BE85891E6D90B3003F3861 /* Topological Sorting.playground */,
				41BE858A1E6D90B3003F3861 /* Word Ladder.playground */,
				41BE858B1E6D90B4003F3861 /* Zombie in Matrix.playground */,
				B8C1B3981E6E638300C315BC /* Alien Dictionary.playground */,
				41BE85AA1E739686003F3861 /* Island Perimeter.playground */,
				B8C1FDF51E74D5DE00A14EC1 /* Sequence Reconstruction.playground */,
				B8C1FDF61E74D61900A14EC1 /* Build Post Office II.playground */,
				B8C1FDF71E74D67500A14EC1 /* Connected Component in Undirected Graph.playground */,
				B8C1FDF81E74D6DE00A14EC1 /* Smallest Rectangle Enclosing Black Pixels.playground */,
			);
			path = BFS;
			sourceTree = "<group>";
		};
		41BE85931E6D9679003F3861 /* Heap */ = {
			isa = PBXGroup;
			children = (
				41BE85941E6D967E003F3861 /* Merge k Sorted Lists.playground */,
				B8C1FDDD1E74C34700A14EC1 /* Ugly Number.playground */,
				B8C1FDDE1E74C37E00A14EC1 /* Heapify.playground */,
				B8C1FDDF1E74C3AB00A14EC1 /* Top k Largest Number II.playground */,
				B8C1FDE01E74CF7100A14EC1 /* High Five.playground */,
				B8C1FDE11E74CFD100A14EC1 /* K Closest Points.playground */,
				B8C1FDEC1E74D18300A14EC1 /* Data Stream Median.playground */,
				B8C1FDED1E74D21300A14EC1 /* Top k Largest Numbers.playground */,
				B8C1FDEE1E74D24800A14EC1 /* Kth Smallest Number in Sorted Matrix.playground */,
				B8C1FDEF1E74D2B900A14EC1 /* Top K Frequent Elements.playground */,
				B8C1FDF01E74D30500A14EC1 /* Building Outline.playground */,
			);
			path = Heap;
			sourceTree = "<group>";
		};
		41BE859A1E6D9839003F3861 /* Trie */ = {
			isa = PBXGroup;
			children = (
				41BE859B1E6D9841003F3861 /* Add and Search Word.playground */,
			);
			path = Trie;
			sourceTree = "<group>";
		};
		41BE85AF1E74B74E003F3861 /* Partition */ = {
			isa = PBXGroup;
			children = (
				41BE85631E6CAFF1003F3861 /* Partition Array.playground */,
				41BE85AD1E74B6C8003F3861 /* Kth Largest Element in an Array.playground */,
				B8C1B39F1E6E662D00C315BC /* Median of two Sorted Arrays.playground */,
				41BE85AE1E74B70D003F3861 /* Median.playground */,
			);
			name = Partition;
			sourceTree = "<group>";
		};
		41BE85B01E74B76F003F3861 /* TwoSum */ = {
			isa = PBXGroup;
			children = (
				41BE85571E6CAF03003F3861 /* Two Sum.playground */,
				41BE85591E6CAF40003F3861 /* Two Sum - Less than or equal to target.playground */,
				41BE85601E6CAFB6003F3861 /* Two Sum - Input array is sorted.playground */,
				41BE855B1E6CAF66003F3861 /* Two Sum - Unique pairs.playground */,
				41BE85611E6CAFC9003F3861 /* Two Sum - Closest to target.playground */,
				41BE855F1E6CAF95003F3861 /* 3Sum.playground */,
				B8C1B3A41E6E678E00C315BC /* 3Sum Closest.playground */,
				B8C1B3A51E6E67C500C315BC /* 4Sum.playground */,
			);
			name = TwoSum;
			sourceTree = "<group>";
		};
		41BE85B11E74B78B003F3861 /* Forward */ = {
			isa = PBXGroup;
			children = (
				41BE85581E6CAF2C003F3861 /* Remove Duplicate Numbers in Array.playground */,
				B8C1B3A31E6E673600C315BC /* Move Zeroes.playground */,
				41BE85B61E74B93C003F3861 /* Two Sum - Difference equals to target.playground */,
			);
			name = Forward;
			sourceTree = "<group>";
		};
		41BE85B21E74B7C0003F3861 /* Bidirectional */ = {
			isa = PBXGroup;
			children = (
				41BE85B01E74B76F003F3861 /* TwoSum */,
				41BE855D1E6CAF81003F3861 /* Sort Colors.playground */,
				41BE85621E6CAFDD003F3861 /* Sort Colors II.playground */,
				41BE85A11E6D9A0C003F3861 /* Valid Palindrome.playground */,
				41BE85B31E74B85D003F3861 /* Partition Array by Odd and Even.playground */,
				41BE85B41E74B8A3003F3861 /* Interleaving Positive and Negative Numbers.playground */,
				41BE85B51E74B8E5003F3861 /* Sort Letters by Case.playground */,
				B877739D1E9068BD0070EBD2 /* Trapping Rain Water.playground */,
			);
			name = Bidirectional;
			sourceTree = "<group>";
		};
		41C1403A1E63651600F86BF8 /* Stack */ = {
			isa = PBXGroup;
			children = (
				B8C1FDD21E74C0D900A14EC1 /* Special */,
				41C1403B1E63658800F86BF8 /* Expression Expand.playground */,
				41C140411E63694E00F86BF8 /* Valid Parentheses.playground */,
				41C140421E6369E600F86BF8 /* Binary Tree Iterative Traversals.playground */,
				41C140431E636A4500F86BF8 /* Longest Valid Parentheses.playground */,
				41C140441E636B2900F86BF8 /* Simplify Path.playground */,
				41C140451E636B7C00F86BF8 /* Ternary Expression Parser.playground */,
				41C140461E636BDB00F86BF8 /* Remove K Digits.playground */,
				41C140471E636C1600F86BF8 /* Evaluate Reverse Polish Notation.playground */,
				41BE859E1E6D9944003F3861 /* Flatten Nested List Iterator.playground */,
				B8C1FDCD1E74BF6600A14EC1 /* Implement Stack using Queues.playground */,
				B8C1FDCE1E74BF9F00A14EC1 /* Implement Queue using Stacks.playground */,
				B8C1FDCF1E74C00900A14EC1 /* Min Stack.playground */,
			);
			path = Stack;
			sourceTree = "<group>";
		};
		B811C8741E5E7C02009E3483 /* Basic */ = {
			isa = PBXGroup;
			children = (
				B811C8771E5E7C6A009E3483 /* IntegerAndArray */,
				B811C8751E5E7C6A009E3483 /* BinarySearchTree&HashTable */,
				B811C8761E5E7C6A009E3483 /* BinaryTree&Recursion */,
				B811C8781E5E7C6A009E3483 /* OO&LinkedList */,
				B811C8791E5E7C6A009E3483 /* SortAlgorithm */,
				B811C87A1E5E7C6A009E3483 /* Stack&Queue */,
				B811C87B1E5E7C6A009E3483 /* StringFunctionClass */,
			);
			path = Basic;
			sourceTree = "<group>";
		};
		B811C8751E5E7C6A009E3483 /* BinarySearchTree&HashTable */ = {
			isa = PBXGroup;
			children = (
			);
			path = "BinarySearchTree&HashTable";
			sourceTree = "<group>";
		};
		B811C8761E5E7C6A009E3483 /* BinaryTree&Recursion */ = {
			isa = PBXGroup;
			children = (
			);
			path = "BinaryTree&Recursion";
			sourceTree = "<group>";
		};
		B811C8771E5E7C6A009E3483 /* IntegerAndArray */ = {
			isa = PBXGroup;
			children = (
			);
			path = IntegerAndArray;
			sourceTree = "<group>";
		};
		B811C8781E5E7C6A009E3483 /* OO&LinkedList */ = {
			isa = PBXGroup;
			children = (
			);
			path = "OO&LinkedList";
			sourceTree = "<group>";
		};
		B811C8791E5E7C6A009E3483 /* SortAlgorithm */ = {
			isa = PBXGroup;
			children = (
			);
			path = SortAlgorithm;
			sourceTree = "<group>";
		};
		B811C87A1E5E7C6A009E3483 /* Stack&Queue */ = {
			isa = PBXGroup;
			children = (
			);
			path = "Stack&Queue";
			sourceTree = "<group>";
		};
		B811C87B1E5E7C6A009E3483 /* StringFunctionClass */ = {
			isa = PBXGroup;
			children = (
			);
			path = StringFunctionClass;
			sourceTree = "<group>";
		};
		B82413611E58CCF5002A692F /* Binary Tree (Divide&Conquer) */ = {
			isa = PBXGroup;
			children = (
				B82413621E58CD1B002A692F /* Subtree with Maximum Average .playground */,
				B8AF4AFC1E59FF640004E8A1 /* Minimum Subtree.playground */,
				B8AF4B4C1E5A571F0004E8A1 /* Binary Tree Longest Consecutive Sequence.playground */,
				41BE85561E6C9672003F3861 /* Binary Tree Path Sum.playground */,
				B811C8721E5D3D30009E3483 /* Binary Tree Paths.playground */,
				B8AF4B4F1E5BED5D0004E8A1 /* Flatten Binary Tree to Linked List.playground */,
				41BE85521E6B9DEE003F3861 /* Maximum Depth of Binary Tree.playground */,
				B811C8711E5A8D15009E3483 /* Balanced Binary Tree.playground */,
				B811C8701E5A859D009E3483 /* Lowest Common Ancestor.playground */,
				41BE85531E6C5D7A003F3861 /* Lowest Common Ancestor of a Binary Search Tree.playground */,
				B8AF4B4D1E5A67520004E8A1 /* Validate Binary Search Tree.playground */,
				B8AF4AFD1E5A087C0004E8A1 /* Binary Tree Level Order Traversal.playground */,
				B8AF4B4E1E5A9F970004E8A1 /* convert binary search tree to doubly linked list.playground */,
				B811C8731E5D5129009E3483 /* Symmetric Tree.playground */,
				41BE85541E6C8EEF003F3861 /* Minimum Depth of Binary Tree.playground */,
				41BE858D1E6D9117003F3861 /* Binary Tree Vertical Order Traversal.playground */,
				41BE85901E6D94FF003F3861 /* Serialize and Deserialize Binary Tree.playground */,
				41BE85991E6D97B9003F3861 /* Inorder Successor in BST.playground */,
				41BE85A01E6D99D1003F3861 /* Binary Search Tree Iterator.playground */,
				B8C1FDF11E74D41500A14EC1 /* Binary Tree Postorder Traversal.playground */,
				41F7B8FA1E7DC3B400CD70CC /* Invert Binary Tree.playground */,
				B809EAB31E7F498700B6D090 /* Construct Binary Tree from Inorder and Postorder Traversal.playground */,
				B809EAB41E7F49FF00B6D090 /* Construct Binary Tree from Preorder and Inorder Traversal.playground */,
				41F4B92D1EAED147006A9F94 /* Binary Tree Upside Down.playground */,
			);
			name = "Binary Tree (Divide&Conquer)";
			path = "Binary Tree";
			sourceTree = "<group>";
		};
		B8AF4AB91E57C2540004E8A1 = {
			isa = PBXGroup;
			children = (
				B8AF4AC41E57C2540004E8A1 /* SwiftCoding */,
				B8AF4AD91E57C2540004E8A1 /* SwiftCodingTests */,
				B8AF4AE41E57C2540004E8A1 /* SwiftCodingUITests */,
				B8AF4B3B1E5A3E4D0004E8A1 /* ZHDataStructure */,
				B8AF4AC31E57C2540004E8A1 /* Products */,
			);
			sourceTree = "<group>";
		};
		B8AF4AC31E57C2540004E8A1 /* Products */ = {
			isa = PBXGroup;
			children = (
				B8AF4AC21E57C2540004E8A1 /* SwiftCoding.app */,
				B8AF4AD61E57C2540004E8A1 /* SwiftCodingTests.xctest */,
				B8AF4AE11E57C2540004E8A1 /* SwiftCodingUITests.xctest */,
				B8AF4B3A1E5A3E4D0004E8A1 /* ZHDataStructure.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		B8AF4AC41E57C2540004E8A1 /* SwiftCoding */ = {
			isa = PBXGroup;
			children = (
				B8AF4AF31E57C2F90004E8A1 /* Categories */,
				B811C8741E5E7C02009E3483 /* Basic */,
				B8AF4AF51E57C3070004E8A1 /* Others */,
			);
			path = SwiftCoding;
			sourceTree = "<group>";
		};
		B8AF4AD91E57C2540004E8A1 /* SwiftCodingTests */ = {
			isa = PBXGroup;
			children = (
				B8AF4ADA1E57C2540004E8A1 /* SwiftCodingTests.swift */,
				B8AF4ADC1E57C2540004E8A1 /* Info.plist */,
			);
			path = SwiftCodingTests;
			sourceTree = "<group>";
		};
		B8AF4AE41E57C2540004E8A1 /* SwiftCodingUITests */ = {
			isa = PBXGroup;
			children = (
				B8AF4AE51E57C2540004E8A1 /* SwiftCodingUITests.swift */,
				B8AF4AE71E57C2540004E8A1 /* Info.plist */,
			);
			path = SwiftCodingUITests;
			sourceTree = "<group>";
		};
		B8AF4AF31E57C2F90004E8A1 /* Categories */ = {
			isa = PBXGroup;
			children = (
				41BE85811E6D90B3003F3861 /* BFS */,
				B8AF4AF41E57C2F90004E8A1 /* Binary Search */,
				B82413611E58CCF5002A692F /* Binary Tree (Divide&Conquer) */,
				B8C1FDDA1E74C2DF00A14EC1 /* DataStructure */,
				B8BC1C0D1E5FC9AF000B20AB /* DFS */,
				419638051E65AA0B00B34585 /* DP */,
				41BE85931E6D9679003F3861 /* Heap */,
				B8C1B3991E6E63B800C315BC /* LinkedList */,
				B8C1B3921E6E612500C315BC /* Math */,
				41C1403A1E63651600F86BF8 /* Stack */,
				41BE85701E6D1A41003F3861 /* String&Array */,
				41BE859A1E6D9839003F3861 /* Trie */,
				41BE85551E6C937C003F3861 /* Two Pointers */,
			);
			path = Categories;
			sourceTree = "<group>";
		};
		B8AF4AF41E57C2F90004E8A1 /* Binary Search */ = {
			isa = PBXGroup;
			children = (
				B8AF4AF61E57C3790004E8A1 /* Last Position of Target.playground */,
				B8AF4AF71E57C5700004E8A1 /* First Position of Target.playground */,
				B8AF4AF81E57C69F0004E8A1 /* Sqrt(x).playground */,
				B824135D1E57CE88002A692F /* Search in a Big Sorted Array.playground */,
				B824135E1E57D18B002A692F /* Find Minimum in Rotated Sorted Array.playground */,
				B824135F1E57D345002A692F /* Find Peak Element.playground */,
				B82413601E57D6B9002A692F /* First Bad Version.playground */,
				B8AF4AF91E57DC3D0004E8A1 /* Search in Rotated Sorted Array.playground */,
				B8AF4AFA1E58BD410004E8A1 /*  Wood Cut.playground */,
				B8AF4AFB1E58C0C50004E8A1 /* Copy Books.playground */,
				B8C1FDF91E74D7C100A14EC1 /* Search a 2D Matrix.playground */,
				B8C1FDFA1E74D7DF00A14EC1 /* Maximum Number in Mountain Sequence.playground */,
			);
			path = "Binary Search";
			sourceTree = "<group>";
		};
		B8AF4AF51E57C3070004E8A1 /* Others */ = {
			isa = PBXGroup;
			children = (
				B8AF4AC51E57C2540004E8A1 /* AppDelegate.swift */,
				B8AF4AC71E57C2540004E8A1 /* ViewController.swift */,
				B8AF4AC91E57C2540004E8A1 /* Main.storyboard */,
				B8AF4ACC1E57C2540004E8A1 /* Assets.xcassets */,
				B8AF4ACE1E57C2540004E8A1 /* LaunchScreen.storyboard */,
				B8AF4AD11E57C2540004E8A1 /* Info.plist */,
			);
			name = Others;
			sourceTree = "<group>";
		};
		B8AF4B3B1E5A3E4D0004E8A1 /* ZHDataStructure */ = {
			isa = PBXGroup;
			children = (
				B8AF4B471E5A3E600004E8A1 /* ZHClasses */,
				B8AF4B3C1E5A3E4D0004E8A1 /* ZHDataStructure.h */,
				B8AF4B3D1E5A3E4D0004E8A1 /* Info.plist */,
			);
			path = ZHDataStructure;
			sourceTree = "<group>";
		};
		B8AF4B471E5A3E600004E8A1 /* ZHClasses */ = {
			isa = PBXGroup;
			children = (
				41C1403D1E6368FA00F86BF8 /* Heap.swift */,
				41C1403E1E6368FA00F86BF8 /* PriorityQueue.swift */,
				B8AF4B481E5A3E720004E8A1 /* BinaryTreeTraversal.swift */,
				B8AF4B491E5A3E720004E8A1 /* Stack.swift */,
				419638031E651CEA00B34585 /* Graph.swift */,
				419638071E65AE0800B34585 /* String+Extension.swift */,
				419638121E67C55000B34585 /* LinkedList.swift */,
				419638141E67C59800B34585 /* Queue.swift */,
				41BE856B1E6D190E003F3861 /* Interval.swift */,
				41BE85951E6D9692003F3861 /* ListNode.swift */,
				41BE859C1E6D98A5003F3861 /* TrieNode.swift */,
				B8334D021E73383F00CD7D50 /* Algorithms.swift */,
				B8C1FDE31E74D01D00A14EC1 /* Point.swift */,
			);
			path = ZHClasses;
			sourceTree = "<group>";
		};
		B8BC1C0D1E5FC9AF000B20AB /* DFS */ = {
			isa = PBXGroup;
			children = (
				B8BC1C101E5FCDBE000B20AB /* Subset.playground */,
				B811C87C1E5FD2EC009E3483 /* Permutation.playground */,
				B8BC1C111E5FDBDD000B20AB /* Combination.playground */,
				B8BC1C121E5FE21F000B20AB /* Combination Sum.playground */,
				B8BC1C131E613F27000B20AB /* Combination Sum II.playground */,
				B81C048B1E6149C400E9F997 /* Combination Sum III.playground */,
				B81C048C1E624B7400E9F997 /* Palindrome Partitioning.playground */,
				B81C048E1E624C1800E9F997 /* Word Squares.playground */,
				B81C048F1E624C7A00E9F997 /* Letter Combinations of a Phone Number.playground */,
				41C140371E63480A00F86BF8 /* String Permutation II.playground */,
				B8C908431E635BFE004BBACA /* Number of Islands DFS.playground */,
				419637FA1E6509D700B34585 /* Word Break I.playground */,
				419637F91E6507B900B34585 /* Word Break II.playground */,
				B8C1B38F1E6B794200C315BC /* Binary Tree Path Sum.playground */,
				419638001E6516A400B34585 /* Remove Invalid Parentheses.playground */,
				41BE85911E6D9573003F3861 /* Expression Add Operators.playground */,
				B8C1FDF41E74D53000A14EC1 /* Convert Binary Tree to Linked Lists by Depth.playground */,
			);
			path = DFS;
			sourceTree = "<group>";
		};
		B8C1B3921E6E612500C315BC /* Math */ = {
			isa = PBXGroup;
			children = (
				B8C1B3931E6E614100C315BC /* Pow(x, n).playground */,
				41F7B8F81E7B849400CD70CC /* Divide Two Integers.playground */,
				415E565F1EB576A900BD2D5B /* Rectangle Overlap.playground */,
			);
			path = Math;
			sourceTree = "<group>";
		};
		B8C1B3991E6E63B800C315BC /* LinkedList */ = {
			isa = PBXGroup;
			children = (
				B8C1B39A1E6E63D000C315BC /* Reverse Linked List.playground */,
				B8C1FDC21E74BB5B00A14EC1 /* Reverse Linked List II.playground */,
				B8C1B39B1E6E649300C315BC /* Copy List with Random Pointer.playground */,
				B8C1B39C1E6E654800C315BC /* Sort List.playground */,
				B8C1B39D1E6E659100C315BC /* Linked List Cycle.playground */,
				B8C1B39E1E6E65CE00C315BC /* Merge Two Sorted Lists.playground */,
				B8C1B3A21E6E66F900C315BC /* Partition List.playground */,
				B8C1FDC11E74BAD100A14EC1 /* Reverse Nodes in k-Groups.playground */,
				B8C1FDC31E74BBED00A14EC1 /* Swap Nodes in Pairs.playground */,
				B8C1FDC51E74BC7600A14EC1 /* Reorder List.playground */,
				B8C1FDC61E74BC9700A14EC1 /* Rotate List.playground */,
				B8C1FDC41E74BC1100A14EC1 /* Swap Two Nodes in Linked List.playground */,
				B8C1FDC71E74BD4700A14EC1 /* Delete Node in the Middle of Singly Linked List .playground */,
				B8C1FDC81E74BD8F00A14EC1 /* Convert Sorted List to Binary Search Tree.playground */,
				B8C1FDC91E74BDC200A14EC1 /* Convert Binary Search Tree to Doubly Linked List.playground */,
				41F7B8FB1E7DD4C000CD70CC /* Add Two Numbers.playground */,
				415478DA1E9F177500692FC6 /* Odd Even Linked List.playground */,
				41A689BD1EA06F8600550E92 /* Remove Nth Node From End of List.playground */,
				41A689C81EA1C19700550E92 /* Remove Duplicates from Sorted List.playground */,
				41B445571EA31D4A00804D3D /* Remove Duplicates from Sorted List II.playground */,
			);
			path = LinkedList;
			sourceTree = "<group>";
		};
		B8C1FDCA1E74BE1E00A14EC1 /* PrefixSum */ = {
			isa = PBXGroup;
			children = (
				41BE859F1E6D998F003F3861 /* Best Time to Buy and Sell Stock.playground */,
				B8C1B3A01E6E666400C315BC /* Maximum Subarray.playground */,
				41BE85A31E718A9C003F3861 /* Minimum Subarray.playground */,
				41BE85A51E718B6B003F3861 /* Subarray Sum.playground */,
				B8C1FDCB1E74BE3F00A14EC1 /* Window Sum.playground */,
			);
			name = PrefixSum;
			sourceTree = "<group>";
		};
		B8C1FDD21E74C0D900A14EC1 /* Special */ = {
			isa = PBXGroup;
			children = (
				B8C1FDD01E74C05D00A14EC1 /* Maximal Rectangle.playground */,
				B8C1FDD11E74C09D00A14EC1 /* Largest Rectangle in Histogram.playground */,
				B8C1FDD31E74C0FD00A14EC1 /* Max Tree.playground */,
			);
			name = Special;
			sourceTree = "<group>";
		};
		B8C1FDD51E74C1E600A14EC1 /* Anagrams */ = {
			isa = PBXGroup;
			children = (
				B8C1FDD61E74C1EC00A14EC1 /* Anagrams.playground */,
				B8C1FDD71E74C22800A14EC1 /* Group Anagrams.playground */,
				B8C1FDD81E74C26400A14EC1 /* Valid Anagram.playground */,
				B8C1FDD91E74C27D00A14EC1 /* Find All Anagrams in a String.playground */,
			);
			name = Anagrams;
			sourceTree = "<group>";
		};
		B8C1FDDA1E74C2DF00A14EC1 /* DataStructure */ = {
			isa = PBXGroup;
			children = (
				B8C1FDDB1E74C2E700A14EC1 /* LRU Cache.playground */,
				B8C1FDDC1E74C31800A14EC1 /* LFU Cache.playground */,
			);
			path = DataStructure;
			sourceTree = "<group>";
		};
		B8C1FDE51E74D0BF00A14EC1 /* Merge */ = {
			isa = PBXGroup;
			children = (
				B8C1B3951E6E62A500C315BC /* Merge Sorted Array.playground */,
				B8C1FDCC1E74BE9B00A14EC1 /* Merge Two Sorted Arrays.playground */,
				B8C1FDE61E74D0CB00A14EC1 /* Merge k Sorted Arrays.playground */,
			);
			name = Merge;
			sourceTree = "<group>";
		};
		B8C1FDE71E74D16600A14EC1 /* Intervals */ = {
			isa = PBXGroup;
			children = (
				B8C1FDE81E74D16600A14EC1 /* Insert Interval.playground */,
				B8C1FDEB1E74D16600A14EC1 /* Merge Intervals.playground */,
				B8C1FDEA1E74D16600A14EC1 /* Meeting Rooms.playground */,
				B8C1FDE91E74D16600A14EC1 /* Meeting Rooms II.playground */,
			);
			path = Intervals;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		B8AF4B371E5A3E4D0004E8A1 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8AF4B3E1E5A3E4D0004E8A1 /* ZHDataStructure.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		B8AF4AC11E57C2540004E8A1 /* SwiftCoding */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B8AF4AEA1E57C2540004E8A1 /* Build configuration list for PBXNativeTarget "SwiftCoding" */;
			buildPhases = (
				B8AF4ABE1E57C2540004E8A1 /* Sources */,
				B8AF4ABF1E57C2540004E8A1 /* Frameworks */,
				B8AF4AC01E57C2540004E8A1 /* Resources */,
				B8AF4B461E5A3E4D0004E8A1 /* Embed Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				B8AF4B401E5A3E4D0004E8A1 /* PBXTargetDependency */,
			);
			name = SwiftCoding;
			productName = SwiftCoding;
			productReference = B8AF4AC21E57C2540004E8A1 /* SwiftCoding.app */;
			productType = "com.apple.product-type.application";
		};
		B8AF4AD51E57C2540004E8A1 /* SwiftCodingTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B8AF4AED1E57C2540004E8A1 /* Build configuration list for PBXNativeTarget "SwiftCodingTests" */;
			buildPhases = (
				B8AF4AD21E57C2540004E8A1 /* Sources */,
				B8AF4AD31E57C2540004E8A1 /* Frameworks */,
				B8AF4AD41E57C2540004E8A1 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				B8AF4AD81E57C2540004E8A1 /* PBXTargetDependency */,
			);
			name = SwiftCodingTests;
			productName = SwiftCodingTests;
			productReference = B8AF4AD61E57C2540004E8A1 /* SwiftCodingTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		B8AF4AE01E57C2540004E8A1 /* SwiftCodingUITests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B8AF4AF01E57C2540004E8A1 /* Build configuration list for PBXNativeTarget "SwiftCodingUITests" */;
			buildPhases = (
				B8AF4ADD1E57C2540004E8A1 /* Sources */,
				B8AF4ADE1E57C2540004E8A1 /* Frameworks */,
				B8AF4ADF1E57C2540004E8A1 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				B8AF4AE31E57C2540004E8A1 /* PBXTargetDependency */,
			);
			name = SwiftCodingUITests;
			productName = SwiftCodingUITests;
			productReference = B8AF4AE11E57C2540004E8A1 /* SwiftCodingUITests.xctest */;
			productType = "com.apple.product-type.bundle.ui-testing";
		};
		B8AF4B391E5A3E4D0004E8A1 /* ZHDataStructure */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = B8AF4B451E5A3E4D0004E8A1 /* Build configuration list for PBXNativeTarget "ZHDataStructure" */;
			buildPhases = (
				B8AF4B351E5A3E4D0004E8A1 /* Sources */,
				B8AF4B361E5A3E4D0004E8A1 /* Frameworks */,
				B8AF4B371E5A3E4D0004E8A1 /* Headers */,
				B8AF4B381E5A3E4D0004E8A1 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = ZHDataStructure;
			productName = ZHDataStructure;
			productReference = B8AF4B3A1E5A3E4D0004E8A1 /* ZHDataStructure.framework */;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		B8AF4ABA1E57C2540004E8A1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0820;
				LastUpgradeCheck = 0820;
				ORGANIZATIONNAME = Planhola;
				TargetAttributes = {
					B8AF4AC11E57C2540004E8A1 = {
						CreatedOnToolsVersion = 8.2.1;
						DevelopmentTeam = 4B6J56772J;
						ProvisioningStyle = Automatic;
					};
					B8AF4AD51E57C2540004E8A1 = {
						CreatedOnToolsVersion = 8.2.1;
						DevelopmentTeam = 4B6J56772J;
						ProvisioningStyle = Automatic;
						TestTargetID = B8AF4AC11E57C2540004E8A1;
					};
					B8AF4AE01E57C2540004E8A1 = {
						CreatedOnToolsVersion = 8.2.1;
						DevelopmentTeam = 4B6J56772J;
						ProvisioningStyle = Automatic;
						TestTargetID = B8AF4AC11E57C2540004E8A1;
					};
					B8AF4B391E5A3E4D0004E8A1 = {
						CreatedOnToolsVersion = 8.2.1;
						DevelopmentTeam = 4B6J56772J;
						LastSwiftMigration = 0820;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = B8AF4ABD1E57C2540004E8A1 /* Build configuration list for PBXProject "SwiftCoding" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = B8AF4AB91E57C2540004E8A1;
			productRefGroup = B8AF4AC31E57C2540004E8A1 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				B8AF4AC11E57C2540004E8A1 /* SwiftCoding */,
				B8AF4AD51E57C2540004E8A1 /* SwiftCodingTests */,
				B8AF4AE01E57C2540004E8A1 /* SwiftCodingUITests */,
				B8AF4B391E5A3E4D0004E8A1 /* ZHDataStructure */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		B8AF4AC01E57C2540004E8A1 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8AF4AD01E57C2540004E8A1 /* LaunchScreen.storyboard in Resources */,
				B8AF4ACD1E57C2540004E8A1 /* Assets.xcassets in Resources */,
				B8AF4ACB1E57C2540004E8A1 /* Main.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4AD41E57C2540004E8A1 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4ADF1E57C2540004E8A1 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4B381E5A3E4D0004E8A1 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		B8AF4ABE1E57C2540004E8A1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8AF4AC81E57C2540004E8A1 /* ViewController.swift in Sources */,
				B8AF4AC61E57C2540004E8A1 /* AppDelegate.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4AD21E57C2540004E8A1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8AF4ADB1E57C2540004E8A1 /* SwiftCodingTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4ADD1E57C2540004E8A1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				B8AF4AE61E57C2540004E8A1 /* SwiftCodingUITests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		B8AF4B351E5A3E4D0004E8A1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				41BE856C1E6D190E003F3861 /* Interval.swift in Sources */,
				41C1403F1E6368FA00F86BF8 /* Heap.swift in Sources */,
				41C140401E6368FA00F86BF8 /* PriorityQueue.swift in Sources */,
				B8334D031E73383F00CD7D50 /* Algorithms.swift in Sources */,
				B8C1FDE41E74D01D00A14EC1 /* Point.swift in Sources */,
				B8AF4B4B1E5A3E720004E8A1 /* Stack.swift in Sources */,
				B8AF4B4A1E5A3E720004E8A1 /* BinaryTreeTraversal.swift in Sources */,
				419638081E65AE0800B34585 /* String+Extension.swift in Sources */,
				41BE859D1E6D98A5003F3861 /* TrieNode.swift in Sources */,
				419638131E67C55000B34585 /* LinkedList.swift in Sources */,
				419638151E67C59800B34585 /* Queue.swift in Sources */,
				419638041E651CEA00B34585 /* Graph.swift in Sources */,
				41BE85961E6D9692003F3861 /* ListNode.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		B8AF4AD81E57C2540004E8A1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B8AF4AC11E57C2540004E8A1 /* SwiftCoding */;
			targetProxy = B8AF4AD71E57C2540004E8A1 /* PBXContainerItemProxy */;
		};
		B8AF4AE31E57C2540004E8A1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B8AF4AC11E57C2540004E8A1 /* SwiftCoding */;
			targetProxy = B8AF4AE21E57C2540004E8A1 /* PBXContainerItemProxy */;
		};
		B8AF4B401E5A3E4D0004E8A1 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = B8AF4B391E5A3E4D0004E8A1 /* ZHDataStructure */;
			targetProxy = B8AF4B3F1E5A3E4D0004E8A1 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		B8AF4AC91E57C2540004E8A1 /* Main.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				B8AF4ACA1E57C2540004E8A1 /* Base */,
			);
			name = Main.storyboard;
			sourceTree = "<group>";
		};
		B8AF4ACE1E57C2540004E8A1 /* LaunchScreen.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				B8AF4ACF1E57C2540004E8A1 /* Base */,
			);
			name = LaunchScreen.storyboard;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		B8AF4AE81E57C2540004E8A1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.2;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		B8AF4AE91E57C2540004E8A1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.2;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		B8AF4AEB1E57C2540004E8A1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEVELOPMENT_TEAM = 4B6J56772J;
				INFOPLIST_FILE = SwiftCoding/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.SwiftCoding;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		B8AF4AEC1E57C2540004E8A1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				DEVELOPMENT_TEAM = 4B6J56772J;
				INFOPLIST_FILE = SwiftCoding/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.SwiftCoding;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		B8AF4AEE1E57C2540004E8A1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				BUNDLE_LOADER = "$(TEST_HOST)";
				DEVELOPMENT_TEAM = 4B6J56772J;
				INFOPLIST_FILE = SwiftCodingTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.SwiftCodingTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/SwiftCoding.app/SwiftCoding";
			};
			name = Debug;
		};
		B8AF4AEF1E57C2540004E8A1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				BUNDLE_LOADER = "$(TEST_HOST)";
				DEVELOPMENT_TEAM = 4B6J56772J;
				INFOPLIST_FILE = SwiftCodingTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.SwiftCodingTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/SwiftCoding.app/SwiftCoding";
			};
			name = Release;
		};
		B8AF4AF11E57C2540004E8A1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				DEVELOPMENT_TEAM = 4B6J56772J;
				INFOPLIST_FILE = SwiftCodingUITests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.SwiftCodingUITests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
				TEST_TARGET_NAME = SwiftCoding;
			};
			name = Debug;
		};
		B8AF4AF21E57C2540004E8A1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				DEVELOPMENT_TEAM = 4B6J56772J;
				INFOPLIST_FILE = SwiftCodingUITests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.SwiftCodingUITests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 3.0;
				TEST_TARGET_NAME = SwiftCoding;
			};
			name = Release;
		};
		B8AF4B431E5A3E4D0004E8A1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_IDENTITY = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DEVELOPMENT_TEAM = 4B6J56772J;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = ZHDataStructure/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.ZHDataStructure;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		B8AF4B441E5A3E4D0004E8A1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_IDENTITY = "";
				CURRENT_PROJECT_VERSION = 1;
				DEFINES_MODULE = YES;
				DEVELOPMENT_TEAM = 4B6J56772J;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = ZHDataStructure/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = com.planhola.ZHDataStructure;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 3.0;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		B8AF4ABD1E57C2540004E8A1 /* Build configuration list for PBXProject "SwiftCoding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8AF4AE81E57C2540004E8A1 /* Debug */,
				B8AF4AE91E57C2540004E8A1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		B8AF4AEA1E57C2540004E8A1 /* Build configuration list for PBXNativeTarget "SwiftCoding" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8AF4AEB1E57C2540004E8A1 /* Debug */,
				B8AF4AEC1E57C2540004E8A1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		B8AF4AED1E57C2540004E8A1 /* Build configuration list for PBXNativeTarget "SwiftCodingTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8AF4AEE1E57C2540004E8A1 /* Debug */,
				B8AF4AEF1E57C2540004E8A1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		B8AF4AF01E57C2540004E8A1 /* Build configuration list for PBXNativeTarget "SwiftCodingUITests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8AF4AF11E57C2540004E8A1 /* Debug */,
				B8AF4AF21E57C2540004E8A1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		B8AF4B451E5A3E4D0004E8A1 /* Build configuration list for PBXNativeTarget "ZHDataStructure" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				B8AF4B431E5A3E4D0004E8A1 /* Debug */,
				B8AF4B441E5A3E4D0004E8A1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = B8AF4ABA1E57C2540004E8A1 /* Project object */;
}
